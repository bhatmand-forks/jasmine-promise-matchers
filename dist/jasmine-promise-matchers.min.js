var installPromiseMatchers;(function(){var t,e,a,n;installPromiseMatchers=function(s){s=s||{},angular.mock.inject(function($injector){t=$injector.get("$rootScope"),s.flushHttpBackend!==!1&&(e=$injector.get("$httpBackend")),s.flushTimeout!==!1&&(a=$injector.get("$timeout")),s.flushInterval!==!1&&(n=$injector.get("$interval"))})};var s={PENDING:"pending",REJECTED:"rejected",RESOLVED:"resolved"},c=function(c,r,u,o,i){var f={};if(c.then(function(t){f.actualData=t,f.actualState=s.RESOLVED},function(t){f.actualData=t,f.actualState=s.REJECTED}),t.$apply(),!f.actualState){if(e)try{e.flush()}catch(l){if("No pending request to flush !"!==l.message)throw l}if(a)try{a.flush()}catch(l){if("No deferred tasks to be flushed"!==l.message)throw l}if(n)try{n.flush(1e5)}catch(l){if("No deferred tasks to be flushed"!==l.message)throw l}}if(f.message="Expected "+f.actualState+" to be "+r,f.pass=f.actualState===r,void 0!==u&&f.pass){f.pass=o?u&&u.asymmetricMatch?o.equals(f.actualData,u,i):angular.equals(f.actualData,u):u instanceof jasmine.Matchers.Any||u instanceof jasmine.Matchers.ObjectContaining?u.jasmineMatches(f.actualData):angular.equals(f.actualData,u);var h=jasmine.pp(f.actualData),E=jasmine.pp(u);f.message="Expected "+h+" to be "+E}return f},r=function(t){return{message:"Expected "+t+" to be a Promise",pass:t&&t.then instanceof Function}},u={toBePromise:function(){return r(this.actual)},toBeRejected:function(){return c(this.actual,s.REJECTED).pass},toBeRejectedWith:function(t){return c(this.actual,s.REJECTED,t).pass},toBeResolved:function(){return c(this.actual,s.RESOLVED).pass},toBeResolvedWith:function(t){return c(this.actual,s.RESOLVED,t).pass}},o={toBePromise:function(){return{compare:function(t){return r(t)}}},toBeRejected:function(){return{compare:function(t){return c(t,s.REJECTED)}}},toBeRejectedWith:function(t,e){return{compare:function(a,n){return c(a,s.REJECTED,n,t,e)}}},toBeResolved:function(){return{compare:function(t){return c(t,s.RESOLVED)}}},toBeResolvedWith:function(t,e){return{compare:function(a,n){return c(a,s.RESOLVED,n,t,e)}}}},i=/^2/.test(jasmine.version);beforeEach(function(){i?jasmine.addMatchers(o):this.addMatchers(u)})})();